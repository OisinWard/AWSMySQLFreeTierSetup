---
  - name: create a VPC for MySQL
    ec2_vpc_net: 
      aws_access_key: "{{ aws_id }}"
      aws_secret_key: "{{ aws_key }}"
      region: "{{aws_region}}"
      name: databaseVPC
      cidr_block: 10.0.0.0/16
      tags:
        module: ec2_vpc_net
        project: MySQL free tier lab
        Name: databaseVPC
        Environment: lab
        team: oisin
        service: MySQL database
      tenancy: default
    register: databaseVPC

  - name: Display the databaseVPC output
    debug:
      var: databaseVPC


  - name: Create MySQL RDS subnet 1
    ec2_vpc_subnet:
      aws_access_key: "{{ aws_id }}"
      aws_secret_key: "{{ aws_key }}"
      region: "{{aws_region}}"
      state: present
      cidr: 10.0.0.0/24
      az: "{{ availability_zone1 }}"
      vpc_id: "{{ databaseVPC.vpc.id }}"
      map_public: no
      tags: 
        Name: privateRDSSubnet1
    register: privateRDSSubnet1

  - name: Display the privateRDSSubnet1 output
    debug:
      var: privateRDSSubnet1


  - name: Create MySQL RDS subnet 2
    ec2_vpc_subnet:
      aws_access_key: "{{ aws_id }}"
      aws_secret_key: "{{ aws_key }}"
      region: "{{aws_region}}"
      state: present
      cidr: 10.0.3.0/24
      az: "{{ availability_zone2 }}"
      vpc_id: "{{ databaseVPC.vpc.id }}"
      map_public: no
      tags: 
        Name: privateRDSSubnet2
    register: privateRDSSubnet2

  - name: Display the privateRDSSubnet2 output
    debug:
      var: privateRDSSubnet2

  - name: Create a security group for RDS MySQL access
    ec2_group:
      aws_access_key: "{{ aws_id }}"
      aws_secret_key: "{{ aws_key }}"
      region: "{{ aws_region }}"
      name: "Test Security Group"
      description: "Test Security Group"
      vpc_id: "{{ databaseVPC.vpc.id }}"
      tags: 
        Name: "RDS MySQL Security Group"
      rules:
        - proto: "tcp"
          ports: 3306
          cidr_ip: 0.0.0.0/0
    register: rds_mysql_sg

